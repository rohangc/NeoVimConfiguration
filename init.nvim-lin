" ----------------------------------------------------------------------------------
"                                     Vim-Plug
" ----------------------------------------------------------------------------------
set nocompatible              " be iMproved, required
filetype off                  " required

" ----------------------------------------------------------------------------------
"                        Some commented-out diagnostic code
" ----------------------------------------------------------------------------------
" Check if XDG_DATA_HOME environment variable is set
"if exists('$XDG_DATA_HOME')
"  let rtp = $XDG_DATA_HOME . '/nvim/site/autoload'
"else
"  let rtp = $LOCALAPPDATA . '/nvim/site/autoload'
"endif
"
" Add the path to the runtime path
"execute 'set rtp+=' . rtp
"echo 'Final rtp value: ' . &rtp

" ----------------------------------------------------------------------------------
"                                     Plug-ins
" ----------------------------------------------------------------------------------
" Plug directory is optional
call plug#begin()
" Let vim-plug manage itself
Plug 'junegunn/vim-plug'

" My Plugs
Plug 'AlessandroYorba/Alduin'
"Plug 'altercation/vim-colors-solarized'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'jlanzarotta/bufexplorer'
Plug 'Raimondi/delimitMate'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'sukima/xmledit'
Plug 'vim-scripts/AfterColors.vim'
Plug 'vim-scripts/taglist.vim'
Plug 'github/copilot.vim'
Plug 'drmingdrmer/vim-toggle-quickfix'
Plug 'tpope/vim-fugitive'
Plug 'elzr/vim-json'
Plug 'cdelledonne/vim-cmake'
" This one takes a lot of time, hence do it last
Plug 'ycm-core/YouCompleteMe'

" All of your Plugs must be added before the following line
call plug#end()            " required

filetype plugin indent on    " required

" Brief help:
" :PlugInstall to install the plugins
" :PlugUpdate to install or update the plugins
" :PlugDiff to review the changes from the last update
" :PlugClean to remove plugins no longer in the list

" Put your non-Plug stuff after this line
" ----------------------------------------------------------------------------------


" My Colour scheme
colorscheme alduin

" Maximize on startup
if has("gui_running")
  " GUI is running or is about to start.
  " Maximize gvim window.
  set lines=999 columns=999
else
  " This is console Vim.
  if exists("+lines")
    set lines=50
  endif
  if exists("+columns")
    set columns=100
  endif
endif

if has('win32') || has('win64')
    exe 'set rtp+=' . expand('~/nvim')
    exe 'set rtp+=' . expand('~/nvim/after')
else
    exe 'set rtp+=' . expand('~/.config/nvim')
    exe 'set rtp+=' . expand('~/.config/nvim/after')
endif

" Configure backspace so it acts as it should act
set backspace=eol,start,indent
set whichwrap+=<,>,h,l


" When searching try to be smart about cases 
set smartcase


" Enable syntax highlighting
syntax enable 


set encoding=utf-8


" My preferred settings
set autoindent
set belloff=all
set completeopt-=preview
set expandtab
set guioptions-=T
set linebreak
set nobackup
set nolist
set noundofile
set nowritebackup
set number
set shiftwidth=4
set smartindent
"set smarttab
set softtabstop=4
set tabstop=4
set textwidth=0
set wrap
set wrapmargin=0
set wildignore+=*\\tmp\\*,*.dll,*.exe,*.exp,*.gz,*.ilk,*.lib,*.o,*.pdb,*.pch,*.so,*.swp,tags,*.tar,*.zip


" My keymaps and variables
let g:NERDTreeMouseMode = 3
let g:NERDTreeShowHidden = 1
let g:NERDTreeWinSize = 70
let g:Tlist_Inc_Winwidth = 0
let g:Tlist_WinWidth = 70
let g:ctrlp_map = '<F7>'
let g:ctrlp_cmd = 'CtrlPMixed'
let g:ctrlp_working_path_mode = 'ra'
let g:ycm_collect_identifiers_from_tags_files = 1
let g:ycm_add_preview_to_completeopt = 0
let g:ycm_confirm_extra_conf = 0
let g:ycm_global_ycm_extra_conf = "~/.config/nvim/bundle/YouCompleteMe/.ycm_extra_conf.py"
let g:ycm_disable_for_files_larger_than_kb=5000
let g:ycm_max_diagnostics_to_display=0
let g:ycm_show_detailed_diag_in_popup=1
let g:ycm_always_populate_location_list = 1
" Let clangd fully control code completion
let g:ycm_clangd_uses_ycmd_caching = 0
" Use installed clangd, not YCM-bundled clangd which doesn't get updates.
let g:ycm_clangd_binary_path = exepath("clangd")
let g:ycm_clangd_args = ['--clang-tidy']
nnoremap <C-n> :tnext <CR>
nnoremap <C-p> :tprev <CR>
nnoremap <C-l> :YcmCompleter GoTo <CR>
nnoremap <S-l> :YcmCompleter GoToDefinition <CR>
nnoremap <C-k> :YcmCompleter GoToCallers <CR>
nnoremap <F2> :term <CR>
nnoremap <F5> :cprev <CR>
nnoremap <F6> :cnext <CR>
"nnoremap <F7> :CtrlPMixed <CR>
nnoremap <F8> :NERDTreeToggle <CR>
nnoremap <F9> :TlistToggle <CR>
nnoremap <F10> :BufExplorerVerticalSplit <CR>
nnoremap <2-LeftMouse> *
"For plugin 'drmingdrmer/vim-toggle-quickfix':
nmap <C-g><C-o> <Plug>window:quickfix:loop
